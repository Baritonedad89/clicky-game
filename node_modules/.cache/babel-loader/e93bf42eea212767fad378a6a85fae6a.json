{"ast":null,"code":"import _classCallCheck from \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport { Card } from \"./components/Card\";\nimport Wrapper from './components/Wrapper';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleClick = function (id) {\n      var newShuffle = _this.state.gifs.sort(function () {\n        return 0.5 - Math.random();\n      }).map(gif);\n\n      console.log('clicked', id);\n\n      _this.setState(function (prevState) {\n        return {\n          gifs: prevState.gifs.newShuffle,\n          numberBucket: prevState.numberBucket.concat(id),\n          score: prevState.score + 1,\n          topScore: prevState.topScore + 1\n        };\n      });\n    };\n\n    _this.state = {\n      gifs: [{\n        id: 1,\n        url: 'https://media.giphy.com/media/e5RONJDZLaIRR5itrT/giphy.gif',\n        isclicked: false\n      }, {\n        id: 2,\n        url: 'https://media.giphy.com/media/xTiN0tZb3V6QVzScuI/giphy.gif',\n        isclicked: false\n      }, {\n        id: 3,\n        url: 'https://media.giphy.com/media/3o7aTnQqygA3TcukFi/giphy.gif',\n        isclicked: false\n      }, {\n        id: 4,\n        url: 'https://media.giphy.com/media/3ohzdNzYZoPbJwLHtC/giphy-downsized.gif',\n        isclicked: false\n      }, {\n        id: 5,\n        url: 'https://media.giphy.com/media/4Zo1InomnFJWIwIkf7/giphy-downsized.gif',\n        isclicked: false\n      }, {\n        id: 6,\n        url: 'https://media.giphy.com/media/dIBUivrF5GQJmHx0XQ/giphy.gif',\n        isclicked: false\n      }, {\n        id: 7,\n        url: 'https://media.giphy.com/media/kiwwko5xwTADDZExtu/giphy.gif',\n        isclicked: false\n      }, {\n        id: 8,\n        url: 'https://media.giphy.com/media/8YHmeJfN0jWhZqqyBG/giphy.gif',\n        isclicked: false\n      }, {\n        id: 9,\n        url: 'https://media.giphy.com/media/IQnF0utcFFuiA/giphy-downsized.gif',\n        isclicked: false\n      }, {\n        id: 10,\n        url: 'https://media.giphy.com/media/oX9RhCMF6luPe6hxvj/giphy-downsized.gif',\n        isclicked: false\n      }, {\n        id: 11,\n        url: 'https://media.giphy.com/media/BslY6QeNBqEHm/giphy-downsized.gif',\n        isclicked: false\n      }, {\n        id: 12,\n        url: 'https://media.giphy.com/media/fs62ZydKjn6lbJ0pAU/giphy-downsized.gif',\n        isclicked: false\n      }],\n      score: 0,\n      topScore: 0,\n      numberBucket: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //     const newShuffle = this.state.gifs.sort(function () { return 0.5 - Math.random() });\n    //     console.log('clicked', id)\n    //   this.setState(prevState => {\n    //     return {\n    //       gifs: newShuffle,\n    //       numberBucket: prevState.numberBucket.concat(id),\n    //       score: prevState.score + 1,\n    //       topScore: prevState.topScore + 1,\n    //     }\n    //     })\n    // this.state.numberBucket.map( num => {\n    //   if(num === id) {\n    //     console.log(`num: ${num} and id:${id} matched`)\n    //     // do something to tell user they lost \n    //     this.setState(prevState => {\n    //       return {\n    //         score: prevState.score = 0,\n    //         topScore: prevState.topScore,\n    //         numberBucket: prevState.score = []\n    //       }\n    //     })\n    //   } else {\n    //   }\n    // })\n    // works well - will come back to \n    // this.setState(prevState => {\n    //   const updatedArray = prevState.gifs.map(gif => {\n    //     if (gif.id === id) {\n    //       gif.isclicked = true\n    //     }\n    //     return gif\n    //   })\n    //   return {\n    //     gifs: updatedArray\n    //   }\n    // });\n    // this.setState(prevState => {\n    //   const newerArray = prevState.updatedArray.map(gif => {\n    //     if(gif.isclicked) {\n    //       console.log('clicked already')\n    //     }\n    //     return gif\n    //   })\n    //   return {\n    //     score: 0,\n    //     gifs: newerArray\n    //   }\n    // })\n    // \n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.state.gifs.map(function (gif) {\n        return React.createElement(Card, {\n          isclicked: gif.isclicked,\n          key: gif.id,\n          id: gif.id,\n          url: gif.url,\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/codymj/Coding Bootcamp/Homework/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Header","Card","Wrapper","App","props","handleClick","id","newShuffle","state","gifs","sort","Math","random","map","gif","console","log","setState","prevState","numberBucket","concat","score","topScore","url","isclicked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\"\nimport { Card } from \"./components/Card\"\nimport Wrapper from './components/Wrapper'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      gifs: [\n        {\n          id: 1,\n          url: 'https://media.giphy.com/media/e5RONJDZLaIRR5itrT/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 2,\n          url: 'https://media.giphy.com/media/xTiN0tZb3V6QVzScuI/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 3,\n          url: 'https://media.giphy.com/media/3o7aTnQqygA3TcukFi/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 4,\n          url: 'https://media.giphy.com/media/3ohzdNzYZoPbJwLHtC/giphy-downsized.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 5,\n          url: 'https://media.giphy.com/media/4Zo1InomnFJWIwIkf7/giphy-downsized.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 6,\n          url: 'https://media.giphy.com/media/dIBUivrF5GQJmHx0XQ/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 7,\n          url: 'https://media.giphy.com/media/kiwwko5xwTADDZExtu/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 8,\n          url: 'https://media.giphy.com/media/8YHmeJfN0jWhZqqyBG/giphy.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 9,\n          url: 'https://media.giphy.com/media/IQnF0utcFFuiA/giphy-downsized.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 10,\n          url: 'https://media.giphy.com/media/oX9RhCMF6luPe6hxvj/giphy-downsized.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 11,\n          url: 'https://media.giphy.com/media/BslY6QeNBqEHm/giphy-downsized.gif',\n          isclicked: false,\n\n        },\n        {\n          id: 12,\n          url: 'https://media.giphy.com/media/fs62ZydKjn6lbJ0pAU/giphy-downsized.gif',\n          isclicked: false,\n\n        }\n      ],\n\n      score: 0,\n      topScore: 0,\n      numberBucket: [],\n\n\n    }\n\n\n  }\n\n  handleClick = id => {\n    const newShuffle = this.state.gifs.sort(function () { return 0.5 - Math.random() })\n      .map((gif) )\n    console.log('clicked', id)\n    this.setState(prevState => {\n      return {\n        gifs: prevState.gifs.newShuffle,\n        numberBucket: prevState.numberBucket.concat(id),\n        score: prevState.score + 1,\n        topScore: prevState.topScore + 1,\n      }\n    });\n\n\n\n\n\n\n\n  }\n  //     const newShuffle = this.state.gifs.sort(function () { return 0.5 - Math.random() });\n  //     console.log('clicked', id)\n  //   this.setState(prevState => {\n  //     return {\n  //       gifs: newShuffle,\n  //       numberBucket: prevState.numberBucket.concat(id),\n  //       score: prevState.score + 1,\n  //       topScore: prevState.topScore + 1,\n  //     }\n  //     })\n\n  // this.state.numberBucket.map( num => {\n  //   if(num === id) {\n  //     console.log(`num: ${num} and id:${id} matched`)\n  //     // do something to tell user they lost \n  //     this.setState(prevState => {\n  //       return {\n  //         score: prevState.score = 0,\n  //         topScore: prevState.topScore,\n  //         numberBucket: prevState.score = []\n  //       }\n  //     })\n  //   } else {\n\n  //   }\n  // })\n\n\n\n\n  // works well - will come back to \n  // this.setState(prevState => {\n  //   const updatedArray = prevState.gifs.map(gif => {\n  //     if (gif.id === id) {\n  //       gif.isclicked = true\n  //     }\n  //     return gif\n  //   })\n  //   return {\n  //     gifs: updatedArray\n  //   }\n  // });\n\n  // this.setState(prevState => {\n  //   const newerArray = prevState.updatedArray.map(gif => {\n  //     if(gif.isclicked) {\n  //       console.log('clicked already')\n  //     }\n  //     return gif\n  //   })\n  //   return {\n  //     score: 0,\n  //     gifs: newerArray\n  //   }\n  // })\n  // \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Header\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <Wrapper>\n          {this.state.gifs.map((gif) =>\n            <Card\n              isclicked={gif.isclicked}\n              key={gif.id}\n              id={gif.id}\n              url={gif.url}\n              handleClick={this.handleClick}\n            />\n          )}\n\n        </Wrapper>\n      </div>\n\n\n\n\n    )\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}